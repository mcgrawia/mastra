name: Memory Tests (StreamVNext/AI5)

on:
  workflow_run:
    workflows: ['Quality assurance']
    types:
      - completed

jobs:
  check-changes:
    if: ${{ github.repository == 'mastra-ai/mastra' }}
    runs-on: ubuntu-latest
    outputs:
      memory-changed: ${{ steps.changes.outputs.memory }}
    permissions:
      contents: read
      statuses: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Set pending status
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'pending'
          context: 'Memory Tests (StreamVNext/AI5)'
          description: 'Checking for changes'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Check for memory package changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: main
          ref: ${{ github.event.workflow_run.head_sha }}
          filters: |
            memory:
              - 'packages/memory/**'
              - 'stores/**'
              - 'packages/core/**'
              - 'packages/deployer/**'
              - 'packages/server/**'
              - 'client-sdks/client-js/**'

  skip-tests:
    needs: check-changes
    if: needs.check-changes.outputs.memory-changed == 'false'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set success status for unchanged memory
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'success'
          context: 'Memory Tests (StreamVNext/AI5)'
          description: 'Memory packages unchanged - skipping tests'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  test:
    needs: check-changes
    if: ${{ github.repository == 'mastra-ai/mastra' && needs.check-changes.outputs.memory-changed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        suite:
          - streaming
          - working-memory
          - agent-memory
          - processors
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mastra
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_CACHE: remote:r

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Configure npm registry
        run: mkdir -p ~/setup-pnpm && echo "registry=https://registry.yarnpkg.com" > ~/setup-pnpm/.npmrc

      - uses: wardpeet/action-setup@pnpm-registry
        name: Install pnpm
        with:
          registry: https://registry.yarnpkg.com
          run_install: false

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.1
          cache: 'pnpm'
          registry-url: 'https://registry.yarnpkg.com'

      - name: Install dependencies
        run: pnpm install

      - name: Build vector+store packages
        run: pnpm turbo build --filter "./stores/*" --filter "mastra" --filter "@mastra/memory" --filter "@mastra/fastembed"

      - name: Run Memory ${{ matrix.suite }} tests
        run: pnpm run test:${{ matrix.suite }}
        working-directory: packages/memory/integration-tests-v5
        env:
          NODE_OPTIONS: '--max_old_space_size=8096'
          DB_URL: 'postgresql://postgres:postgres@localhost:5432/mastra'
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          KV_REST_API_URL: ${{ secrets.KV_REST_API_URL }}
          KV_REST_API_TOKEN: ${{ secrets.KV_REST_API_TOKEN }}
          GOOGLE_GENERATIVE_AI_API_KEY: ${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }}

  test-success:
    needs: [check-changes, test]
    if: ${{ always() && needs.check-changes.outputs.memory-changed == 'true' && needs.test.result == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set success status for completed tests
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'success'
          context: 'Memory Tests (StreamVNext/AI5)'
          description: 'All memory tests passed'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  test-failure:
    needs: [check-changes, test]
    if: ${{ always() && needs.check-changes.outputs.memory-changed == 'true' && needs.test.result == 'failure' }}
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set failure status for failed tests
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'failure'
          context: 'Memory Tests (StreamVNext/AI5)'
          description: 'One or more memory tests failed'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
